<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tiny.RestClient</name>
    </assembly>
    <members>
        <member name="T:Tiny.RestClient.Compressions">
            <summary>
            Represent headers of requests.
            </summary>
        </member>
        <member name="M:Tiny.RestClient.Compressions.Add(Tiny.RestClient.ICompression)">
            <summary>
            Add header.
            </summary>
            <param name="compression">header name.</param>
        </member>
        <member name="M:Tiny.RestClient.Compressions.Remove(Tiny.RestClient.ICompression)">
            <summary>
            Removes the compression.
            </summary>
            <param name="compression">item to remove.</param>
            <returns></returns>
        </member>
        <member name="M:Tiny.RestClient.Compressions.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:Tiny.RestClient.Compressions"/> contains the specified compression system.
            </summary>
            <param name="contentEncoding">content encoding.</param>
            <returns>returns true if contains an element with this contentEncoding otherwise false.</returns>
        </member>
        <member name="P:Tiny.RestClient.Compressions.Item(System.String)">
            <summary>
            Gets or sets Compression system.
            </summary>
            <param name="contentEncoding">content encoding key.</param>
            <returns>return compression system.</returns>
        </member>
        <member name="M:Tiny.RestClient.Compressions.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Compressions.Clear">
            <summary>
            Removes all <see cref="T:Tiny.RestClient.ICompression"/> system
            ///. </summary>
        </member>
        <member name="T:Tiny.RestClient.DeflateCompression">
            <summary>
            Gzip compression.
            </summary>
        </member>
        <member name="P:Tiny.RestClient.DeflateCompression.ContentEncoding">
            <inheritdoc/>
        </member>
        <member name="P:Tiny.RestClient.DeflateCompression.AddAcceptEncodingHeader">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.DeflateCompression.CompressAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.DeflateCompression.DecompressAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Tiny.RestClient.GzipCompression">
            <summary>
            Gzip compression.
            </summary>
        </member>
        <member name="P:Tiny.RestClient.GzipCompression.ContentEncoding">
            <inheritdoc/>
        </member>
        <member name="P:Tiny.RestClient.GzipCompression.AddAcceptEncodingHeader">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.GzipCompression.CompressAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.GzipCompression.DecompressAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Tiny.RestClient.ICompression">
            <summary>
            Represent a way to manage compression / decompression.
            </summary>
        </member>
        <member name="P:Tiny.RestClient.ICompression.ContentEncoding">
            <summary>
            Gets the content encoding of compression.
            </summary>
        </member>
        <member name="P:Tiny.RestClient.ICompression.AddAcceptEncodingHeader">
            <summary>
            Gets or sets if the compression system add accept headers when the request is sended.
            </summary>
        </member>
        <member name="M:Tiny.RestClient.ICompression.CompressAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
            <summary>
             Compresses the stream.
            </summary>
            <param name="stream">the stream to compress.</param>
            <param name="bufferSize">the buffer size to use.</param>
            <param name="cancellationToken">the cancellation token.</param>
            <returns>returns stream compressed.</returns>
        </member>
        <member name="M:Tiny.RestClient.ICompression.DecompressAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
            <summary>
             Decompresses the stream.
            </summary>
            <param name="stream">the stream to decompress.</param>
            <param name="bufferSize">the buffer size to use.</param>
            <param name="cancellationToken">the cancellation token.</param>
            <returns>returns stream compressed.</returns>
        </member>
        <member name="T:Tiny.RestClient.ETagFileContainer">
            <summary>
            Class <see cref="T:Tiny.RestClient.ETagFileContainer"/> which store data of entity in a directory.
            </summary>
        </member>
        <member name="M:Tiny.RestClient.ETagFileContainer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tiny.RestClient.ETagFileContainer"/> class.
            </summary>
            <param name="pathOfDirectoryContainer">the path of the directory which will store the data.</param>
        </member>
        <member name="M:Tiny.RestClient.ETagFileContainer.GetExistingETagAsync(System.Uri,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.ETagFileContainer.GetDataAsync(System.Uri,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.ETagFileContainer.SaveDataAsync(System.Uri,System.String,System.IO.Stream,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Tiny.RestClient.IETagContainer">
            <summary>
            Entity Tag container.
            </summary>
        </member>
        <member name="M:Tiny.RestClient.IETagContainer.GetExistingETagAsync(System.Uri,System.Threading.CancellationToken)">
            <summary>
            Get the existing ETag.
            </summary>
            <param name="uri">the uri.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>return the etag if found. If not return null.</returns>
        </member>
        <member name="M:Tiny.RestClient.IETagContainer.GetDataAsync(System.Uri,System.Threading.CancellationToken)">
            <summary>
            Get data of specific uri.
            </summary>
            <param name="uri">the uri.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>return the <see cref="T:System.IO.Stream"/> of data.</returns>
        </member>
        <member name="M:Tiny.RestClient.IETagContainer.SaveDataAsync(System.Uri,System.String,System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            S.
            </summary>
            <param name="uri">the uri.</param>
            <param name="etag">the etag of data.</param>
            <param name="stream"><see cref="T:System.IO.Stream"/> of data to store.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:Tiny.RestClient.ConnectionException">
            <summary>
            Class ConnectionException.
            </summary>
            <seealso cref="T:Tiny.RestClient.TinyRestClientException" />
        </member>
        <member name="P:Tiny.RestClient.ConnectionException.Url">
            <summary>
            Gets the URL.
            </summary>
            <value>The URL.</value>
        </member>
        <member name="P:Tiny.RestClient.ConnectionException.Verb">
            <summary>
            Gets the verb.
            </summary>
            <value>The verb.</value>
        </member>
        <member name="T:Tiny.RestClient.DeserializeException">
            <summary>
            Class DeserializeException.
            </summary>
            <seealso cref="T:Tiny.RestClient.TinyRestClientException" />
        </member>
        <member name="P:Tiny.RestClient.DeserializeException.DataToDeserialize">
            <summary>
            Gets the data to deserialize.
            </summary>
            <value>The data to deserialize.</value>
        </member>
        <member name="T:Tiny.RestClient.HttpException">
            <summary>
            A <see cref="T:Tiny.RestClient.HttpException"/>.
            </summary>
            <seealso cref="T:Tiny.RestClient.TinyRestClientException" />
        </member>
        <member name="M:Tiny.RestClient.HttpException.#ctor(System.Uri,System.String,System.String,System.Net.Http.Headers.HttpRequestHeaders,System.String,System.Net.HttpStatusCode,System.Net.Http.Headers.HttpResponseHeaders,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Tiny.RestClient.HttpException"/> class.
            </summary>
            <param name="uri">The URL.</param>
            <param name="verb">The verb.</param>
            <param name="reasonPhrase">The reason phrase.</param>
            <param name="headers">The headers of the request.</param>
            <param name="content">The content.</param>
            <param name="statusCode">The status code.</param>
            <param name="responseHeaders">The headers of response.</param>
            <param name="ex">The ex.</param>
        </member>
        <member name="P:Tiny.RestClient.HttpException.Verb">
            <summary>
            Gets the verb.
            </summary>
            <value>
            The verb.
            </value>
        </member>
        <member name="P:Tiny.RestClient.HttpException.Headers">
            <summary>
            Gets the headers of sended request.
            </summary>
            <value>
            The verb.
            </value>
        </member>
        <member name="P:Tiny.RestClient.HttpException.ReasonPhrase">
            <summary>
            Gets the reason phrase.
            </summary>
            <value>
            The reason phrase.
            </value>
        </member>
        <member name="P:Tiny.RestClient.HttpException.Uri">
            <summary>
            Gets the Uri.
            </summary>
            <value>
            The URL.
            </value>
        </member>
        <member name="P:Tiny.RestClient.HttpException.Content">
            <summary>
            Gets the content.
            </summary>
            <value>
            The content.
            </value>
        </member>
        <member name="P:Tiny.RestClient.HttpException.ResponseHeaders">
            <summary>
            Gets the response headers of sended request.
            </summary>
            <value>
            The verb.
            </value>
        </member>
        <member name="P:Tiny.RestClient.HttpException.StatusCode">
            <summary>
            Gets the status code.
            </summary>
            <value>
            The status code.
            </value>
        </member>
        <member name="T:Tiny.RestClient.SerializeException">
            <summary>
            Class SerializeException.
            </summary>
            <seealso cref="T:Tiny.RestClient.TinyRestClientException" />
        </member>
        <member name="T:Tiny.RestClient.TinyRestClientException">
            <summary>
            Base Class of all <see cref="T:Tiny.RestClient.TinyRestClientException"/>.
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:Tiny.RestClient.Formatters">
            <summary>
            Collection of <see cref="T:Tiny.RestClient.IFormatter"/>.
            </summary>
        </member>
        <member name="P:Tiny.RestClient.Formatters.Default">
            <summary>
            Gets the default <see cref="T:Tiny.RestClient.IFormatter"/>.
            </summary>
        </member>
        <member name="M:Tiny.RestClient.Formatters.Add(Tiny.RestClient.IFormatter,System.Boolean)">
            <summary>
            Add a formatter in the list of supported formatters.
            </summary>
            <param name="formatter">Add the formatter to the list of supported formatter. The value can't be null.</param>
            <param name="isDefault">Define this formatter as default formatter.</param>
            <exception cref="T:System.ArgumentNullException">throw <see cref="T:System.ArgumentNullException"/> if formatter is null.</exception>
        </member>
        <member name="M:Tiny.RestClient.Formatters.Remove(Tiny.RestClient.IFormatter)">
            <summary>
            Removes a formatter in the list of supported formatters.
            </summary>
            <param name="formatter">The formatter to remove on the supported formatter list.</param>
            <returns>true if item is successfully removed; otherwise, false. This method also returns false if item was not found.</returns>
            <exception cref="T:System.ArgumentNullException">throw <see cref="T:System.ArgumentNullException"/> if formatter is null.</exception>
            <exception cref="T:System.ArgumentException">throw <see cref="T:System.ArgumentException"/> if the current formatter removed is the default one. </exception>
        </member>
        <member name="T:Tiny.RestClient.IFormatter">
            <summary>
            Interface IFormatter.
            </summary>
        </member>
        <member name="P:Tiny.RestClient.IFormatter.DefaultMediaType">
            <summary>
            Gets the default media type used to send request.
            </summary>
            <value>The type of the media.</value>
        </member>
        <member name="P:Tiny.RestClient.IFormatter.SupportedMediaTypes">
            <summary>
            Gets the supported media type by the serializer.
            </summary>
            <value>The type of the media.</value>
        </member>
        <member name="M:Tiny.RestClient.IFormatter.Serialize``1(``0,System.Text.Encoding)">
            <summary>
            Serializes the specified data.
            </summary>
            <typeparam name="T">Type of data serialized.</typeparam>
            <param name="data">The data.</param>
            <param name="encoding">The encoding.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Tiny.RestClient.IFormatter.Deserialize``1(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Deserializes the specified stream.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="stream">The stream.</param>
            <param name="encoding">The encoding.</param>
            <returns>An instance of type <typeparamref name="T"/>.</returns>
        </member>
        <member name="T:Tiny.RestClient.Json.KebabCasePropertyNamesContractResolver">
            <summary>
             Allow SnakeCase (or name also Spinal case) resolve of property (property-name become PropertyName).
            </summary>
            <seealso cref="T:Tiny.RestClient.IFormatter" />
        </member>
        <member name="M:Tiny.RestClient.Json.KebabCasePropertyNamesContractResolver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tiny.RestClient.Json.SnakeCasePropertyNamesContractResolver"/>.
            </summary>
        </member>
        <member name="T:Tiny.RestClient.Json.SeparatorPropertyNamesContractResolver">
            <summary>
             Allow a custom separator to resolve of property (propertySEPARATORname become PropertyName).
            </summary>
        </member>
        <member name="M:Tiny.RestClient.Json.SeparatorPropertyNamesContractResolver.#ctor(System.Char)">
            <summary>
            Initializes a new instance of the <see cref="T:Tiny.RestClient.Json.SeparatorPropertyNamesContractResolver"/>.
            </summary>
            <param name="separator">separator bewteen words.</param>
        </member>
        <member name="M:Tiny.RestClient.Json.SeparatorPropertyNamesContractResolver.ResolvePropertyName(System.String)">
            <summary>
            Resolves a property name to a delimited name.
            </summary>
            <param name="propertyName">property name to resolve.</param>
            <returns></returns>
        </member>
        <member name="T:Tiny.RestClient.Json.SnakeCasePropertyNamesContractResolver">
            <summary>
             Allow snake case resolve of property (property_name become PropertyName).
            </summary>
            <seealso cref="T:Tiny.RestClient.IFormatter" />
        </member>
        <member name="M:Tiny.RestClient.Json.SnakeCasePropertyNamesContractResolver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tiny.RestClient.Json.SnakeCasePropertyNamesContractResolver"/>.
            </summary>
        </member>
        <member name="T:Tiny.RestClient.JsonFormatter">
            <summary>
             Serializes and deserializes objects into and from the JSON format using the Newtonsoft.Json.JsonSerializer.
            </summary>
            <seealso cref="T:Tiny.RestClient.IFormatter" />
        </member>
        <member name="M:Tiny.RestClient.JsonFormatter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tiny.RestClient.JsonFormatter"/>.
            </summary>
        </member>
        <member name="P:Tiny.RestClient.JsonFormatter.JsonSerializer">
            <summary>
            Gets the instance of JsonSerializer.
            </summary>
        </member>
        <member name="M:Tiny.RestClient.JsonFormatter.UseSnakeCase">
            <summary>
            Enable snake case for properties mapping. A property "PropertyName" will become "property_name".
            </summary>
        </member>
        <member name="M:Tiny.RestClient.JsonFormatter.UseCamelCase">
            <summary>
            Enable camel case for properties mapping. A property "PropertyName" will become "propertyName".
            </summary>
        </member>
        <member name="M:Tiny.RestClient.JsonFormatter.UseKebabCase">
            <summary>
            Enable kebab case (also named spinal case) for properties mapping. A property "PropertyName" will become "property-name".
            </summary>
        </member>
        <member name="P:Tiny.RestClient.JsonFormatter.DefaultMediaType">
            <inheritdoc/>
        </member>
        <member name="P:Tiny.RestClient.JsonFormatter.SupportedMediaTypes">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.JsonFormatter.Deserialize``1(System.IO.Stream,System.Text.Encoding)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.JsonFormatter.Serialize``1(``0,System.Text.Encoding)">
            <inheritdoc/>
        </member>
        <member name="T:Tiny.RestClient.XmlFormatter">
            <summary>
            Class TinyXmlSerializer.
            </summary>
            <seealso cref="T:Tiny.RestClient.IFormatter" />
        </member>
        <member name="M:Tiny.RestClient.XmlFormatter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tiny.RestClient.XmlFormatter"/>.
            </summary>
        </member>
        <member name="P:Tiny.RestClient.XmlFormatter.DefaultMediaType">
            <inheritdoc/>
        </member>
        <member name="P:Tiny.RestClient.XmlFormatter.SupportedMediaTypes">
            <inheritdoc/>
        </member>
        <member name="P:Tiny.RestClient.XmlFormatter.WriterSettings">
            <summary>
            Gets the instance of WriterSettings.
            </summary>
        </member>
        <member name="M:Tiny.RestClient.XmlFormatter.Deserialize``1(System.IO.Stream,System.Text.Encoding)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.XmlFormatter.Serialize``1(``0,System.Text.Encoding)">
            <inheritdoc/>
        </member>
        <member name="T:Tiny.RestClient.HttpStatusRange">
            <summary>
            Represent a range of http code.
            </summary>
        </member>
        <member name="M:Tiny.RestClient.HttpStatusRange.#ctor(System.Net.HttpStatusCode,System.Net.HttpStatusCode)">
            <summary>
            Contruct a status range.
            </summary>
            <param name="minHttpStatus">min status range.</param>
            <param name="maxHttpStatus">max status range.</param>
        </member>
        <member name="M:Tiny.RestClient.HttpStatusRange.#ctor(System.Int32,System.Int32)">
            <summary>
            Contruct a status range.
            </summary>
            <param name="minHttpStatus">min status range.</param>
            <param name="maxHttpStatus">max status range.</param>
        </member>
        <member name="M:Tiny.RestClient.HttpStatusRange.#ctor(System.Net.HttpStatusCode)">
            <summary>
            Contruct a status range.
            </summary>
            <param name="httpStatusAllowed">httpStatus allowed.</param>
        </member>
        <member name="M:Tiny.RestClient.HttpStatusRange.#ctor(System.Int32)">
            <summary>
            Contruct a status range.
            </summary>
            <param name="httpStatusAllowed">httpStatus allowed.</param>
        </member>
        <member name="P:Tiny.RestClient.HttpStatusRange.MinHttpStatus">
            <summary>
            Min http status.
            </summary>
        </member>
        <member name="P:Tiny.RestClient.HttpStatusRange.MaxHttpStatus">
            <summary>
            MAx http status.
            </summary>
        </member>
        <member name="T:Tiny.RestClient.HttpStatusRanges">
            <summary>
            Represent a collection ofstatus range.
            </summary>
        </member>
        <member name="P:Tiny.RestClient.HttpStatusRanges.AllowAnyStatus">
            <summary>
            Allow all statuses codes.
            </summary>
        </member>
        <member name="M:Tiny.RestClient.HttpStatusRanges.CheckIfHttpStatusIsAllowed(System.Int32)">
            <summary>
            Check if httpStatus is allowed.
            </summary>
            <param name="statusCode">status code to check.</param>
            <returns></returns>
        </member>
        <member name="T:Tiny.RestClient.CurlListener">
            <summary>
            A listener which will create a postMan collection/>.
            </summary>
        </member>
        <member name="M:Tiny.RestClient.CurlListener.#ctor">
            <summary>
             Initializes a new instance of the <see cref="T:Tiny.RestClient.CurlListener"/> class.
            </summary>
        </member>
        <member name="P:Tiny.RestClient.CurlListener.MeasureTime">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.CurlListener.OnFailedToReceiveResponseAsync(System.Uri,System.Net.Http.HttpMethod,System.Exception,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.CurlListener.OnReceivedResponseAsync(System.Uri,System.Net.Http.HttpMethod,System.Net.Http.HttpResponseMessage,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.CurlListener.OnSendingRequestAsync(System.Uri,System.Net.Http.HttpMethod,System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Tiny.RestClient.CurlListenerExtension">
            <summary>
            Extension to add easily curl listener.
            </summary>
        </member>
        <member name="M:Tiny.RestClient.CurlListenerExtension.AddCurl(Tiny.RestClient.Listeners)">
            <summary>
            Add <see cref="T:Tiny.RestClient.CurlListener"/> to listeners />.
            </summary>
            <param name="listeners">all listeners.</param>
            <returns>listener created.</returns>
        </member>
        <member name="T:Tiny.RestClient.DebugListener">
            <summary>
            A listener which will trace all requests with <see cref="M:System.Diagnostics.Debug.WriteLine(System.Object)"/>.
            </summary>
        </member>
        <member name="M:Tiny.RestClient.DebugListener.#ctor(System.Boolean)">
            <summary>
             Initializes a new instance of the <see cref="T:Tiny.RestClient.DebugListener"/> class.
            </summary>
            <param name="measureTime">true if measure time.</param>
        </member>
        <member name="P:Tiny.RestClient.DebugListener.MeasureTime">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.DebugListener.OnFailedToReceiveResponseAsync(System.Uri,System.Net.Http.HttpMethod,System.Exception,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.DebugListener.OnReceivedResponseAsync(System.Uri,System.Net.Http.HttpMethod,System.Net.Http.HttpResponseMessage,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.DebugListener.OnSendingRequestAsync(System.Uri,System.Net.Http.HttpMethod,System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Tiny.RestClient.DebugListenerExtension">
            <summary>
            Extension to add easily debug listener.
            </summary>
        </member>
        <member name="M:Tiny.RestClient.DebugListenerExtension.AddDebug(Tiny.RestClient.Listeners,System.Boolean)">
            <summary>
            Add <see cref="T:Tiny.RestClient.DebugListener"/> to listeners />.
            </summary>
            <param name="listeners">all listeners.</param>
            <param name="measureTime">allow to measure time to this listener.</param>
        </member>
        <member name="T:Tiny.RestClient.IListener">
            <summary>
            Represent a request listener.
            </summary>
        </member>
        <member name="P:Tiny.RestClient.IListener.MeasureTime">
            <summary>
            Enable the measure of time between requests.
            </summary>
        </member>
        <member name="M:Tiny.RestClient.IListener.OnSendingRequestAsync(System.Uri,System.Net.Http.HttpMethod,System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Invoked when a request is sending.
            </summary>
            <param name="uri">uri of the request.</param>
            <param name="httpMethod">verb of the request.</param>
            <param name="httpRequestMessage">message sended to server.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Tiny.RestClient.IListener.OnReceivedResponseAsync(System.Uri,System.Net.Http.HttpMethod,System.Net.Http.HttpResponseMessage,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
            <summary>
            Invoked when received a response from server.
            </summary>
            <param name="uri">uri of the request.</param>
            <param name="httpMethod">verb of the request.</param>
            <param name="response">response of the server.</param>
            <param name="elapsedTime">time ellapsed between the send of request and response of server.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Tiny.RestClient.IListener.OnFailedToReceiveResponseAsync(System.Uri,System.Net.Http.HttpMethod,System.Exception,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
            <summary>
            Invoke when a request failed to be invoked.
            </summary>
            <param name="uri">uri of the request.</param>
            <param name="httpMethod">verb of the request.</param>
            <param name="exception">exception.</param>
            <param name="elapsedTime">time ellapsed between the send of request and response of server (can be null if no listener measure time).</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:Tiny.RestClient.Listeners">
            <summary>
            Collection of <see cref="T:Tiny.RestClient.IListener"/>.
            </summary>
        </member>
        <member name="P:Tiny.RestClient.Listeners.Count">
            <inheritdoc/>
        </member>
        <member name="P:Tiny.RestClient.Listeners.IsReadOnly">
            <inheritdoc/>
        </member>
        <member name="P:Tiny.RestClient.Listeners.MeasureTime">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Listeners.Add(Tiny.RestClient.IListener)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Listeners.Clear">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Listeners.Contains(Tiny.RestClient.IListener)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Listeners.CopyTo(Tiny.RestClient.IListener[],System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Listeners.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Listeners.Remove(Tiny.RestClient.IListener)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Listeners.OnSendingRequestAsync(System.Uri,System.Net.Http.HttpMethod,System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Listeners.OnFailedToReceiveResponseAsync(System.Uri,System.Net.Http.HttpMethod,System.Exception,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Listeners.OnReceivedResponseAsync(System.Uri,System.Net.Http.HttpMethod,System.Net.Http.HttpResponseMessage,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Tiny.RestClient.PostmanListener">
            <summary>
            A listener which will create a postMan collection/>.
            </summary>
        </member>
        <member name="M:Tiny.RestClient.PostmanListener.#ctor(System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Tiny.RestClient.PostmanListener"/> class.
            </summary>
            <param name="name">name of the postMan collection.</param>
        </member>
        <member name="P:Tiny.RestClient.PostmanListener.MeasureTime">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.PostmanListener.SaveAsync(System.IO.FileInfo)">
            <summary>
            Save PostManCollection to file.
            </summary>
            <param name="fileInfo">file where the collection is saved.</param>
            <returns>return a <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Tiny.RestClient.PostmanListener.GetCollectionJson">
            <summary>
            Get postman collection json data.
            </summary>
            <returns>return a post man collection json file.</returns>
        </member>
        <member name="M:Tiny.RestClient.PostmanListener.OnFailedToReceiveResponseAsync(System.Uri,System.Net.Http.HttpMethod,System.Exception,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.PostmanListener.OnReceivedResponseAsync(System.Uri,System.Net.Http.HttpMethod,System.Net.Http.HttpResponseMessage,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.PostmanListener.OnSendingRequestAsync(System.Uri,System.Net.Http.HttpMethod,System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Tiny.RestClient.PostmanListenerExtension">
            <summary>
            Extension to add easily postman listener.
            </summary>
        </member>
        <member name="M:Tiny.RestClient.PostmanListenerExtension.AddPostman(Tiny.RestClient.Listeners,System.String)">
            <summary>
            Add <see cref="T:Tiny.RestClient.PostmanListener"/> to listeners />.
            </summary>
            <param name="listeners">all listeners.</param>
            <param name="name">name of the collection.</param>
            <returns>listener created.</returns>
        </member>
        <member name="T:Tiny.RestClient.Headers">
            <summary>
            Represent headers of requests.
            </summary>
        </member>
        <member name="M:Tiny.RestClient.Headers.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tiny.RestClient.Headers"/> class.
            </summary>
        </member>
        <member name="M:Tiny.RestClient.Headers.AddBearer(System.String)">
            <summary>
            Add OAuth 2.0 token.
            </summary>
            <param name="token">token to add.</param>
        </member>
        <member name="M:Tiny.RestClient.Headers.AddBasicAuthentication(System.String,System.String)">
            <summary>
            Add basic authentication.
            </summary>
            <param name="username">the username.</param>
            <param name="password">the password.</param>
        </member>
        <member name="M:Tiny.RestClient.Headers.Add(System.String,System.String)">
            <summary>
            Add header.
            </summary>
            <param name="name">header name.</param>
            <param name="value">header value.</param>
        </member>
        <member name="M:Tiny.RestClient.Headers.Remove(System.String)">
            <summary>
            Removes the header with specified name.
            </summary>
            <param name="name">name of the header.</param>
            <returns></returns>
        </member>
        <member name="P:Tiny.RestClient.Headers.Item(System.String)">
            <summary>
            Gets or sets header.
            </summary>
            <param name="name">header name.</param>
            <returns>return header's value.</returns>
        </member>
        <member name="M:Tiny.RestClient.Headers.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="T:Tiny.RestClient.IExecutableRequest">
            <summary>
            Interface IExecutableRequest.
            </summary>
        </member>
        <member name="M:Tiny.RestClient.IExecutableRequest.ExecuteAsync``1(System.Threading.CancellationToken)">
            <summary>
            Executes the request.
            </summary>
            <typeparam name="TResult">The type of the TResult.</typeparam>
            <param name="cancellationToken">The cancellation token.</param>
            <returns><see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:Tiny.RestClient.IExecutableRequest.ExecuteAsync``1(Tiny.RestClient.IFormatter,System.Threading.CancellationToken)">
            <summary>
            Executes the request.
            </summary>
            <typeparam name="TResult">The type of the TResult.</typeparam>
            <param name="formatter">Allow to override the formatter use for the deserialization.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Task of TResukt.</returns>
        </member>
        <member name="M:Tiny.RestClient.IExecutableRequest.ExecuteAsStreamAsync(System.Threading.CancellationToken)">
            <summary>
            Executes the request.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns><see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:Tiny.RestClient.IExecutableRequest.ExecuteAsStringAsync(System.Threading.CancellationToken)">
            <summary>
            Executes the request.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Task of string.</returns>
        </member>
        <member name="M:Tiny.RestClient.IExecutableRequest.ExecuteAsByteArrayAsync(System.Threading.CancellationToken)">
            <summary>
            Executes the request.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Task of byte array.</returns>
        </member>
        <member name="M:Tiny.RestClient.IExecutableRequest.ExecuteAsHttpResponseMessageAsync(System.Threading.CancellationToken)">
            <summary>
            Executes the request.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Task of <see cref="T:System.Net.Http.HttpResponseMessage"/>.</returns>
        </member>
        <member name="M:Tiny.RestClient.IExecutableRequest.DownloadFileAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Download file async.
            </summary>
            <param name="path">path to download.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>return a file info.</returns>
        </member>
        <member name="M:Tiny.RestClient.IExecutableRequest.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Executes the request.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task.</returns>
        </member>
        <member name="T:Tiny.RestClient.IFormRequest">
            <summary>
            Interface IFormRequest.
            </summary>
            <seealso cref="T:Tiny.RestClient.IParameterRequest" />
        </member>
        <member name="M:Tiny.RestClient.IFormRequest.AddFormParameter(System.String,System.String)">
            <summary>
            Adds the form parameter.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns>The current request.</returns>
        </member>
        <member name="M:Tiny.RestClient.IFormRequest.AddFormParameters(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Adds the form parameters.
            </summary>
            <param name="datas">The datas.</param>
            <returns>The current request.</returns>
        </member>
        <member name="T:Tiny.RestClient.IParameterRequest">
            <summary>
            Interface IParameterRequest.
            </summary>
            <seealso cref="T:Tiny.RestClient.IExecutableRequest" />
        </member>
        <member name="M:Tiny.RestClient.IParameterRequest.AllowAnyHttpStatusCode">
            <summary>
            Allow any status code (error 500) don't throw exception.
            </summary>
            <returns>The current request.</returns>
        </member>
        <member name="M:Tiny.RestClient.IParameterRequest.AllowRangeHttpStatusCode(System.Net.HttpStatusCode,System.Net.HttpStatusCode)">
            <summary>
            Allow a range of status code. By default all 2** statuses don't throw exceptions.
            </summary>
            <param name="minHttpStatus">min http status.</param>
            <param name="maxHttpStatus">max http status.</param>
            <returns>The current request.</returns>
        </member>
        <member name="M:Tiny.RestClient.IParameterRequest.AllowRangeHttpStatusCode(System.Int32,System.Int32)">
            <summary>
            Allow a range of status code. By default all 2** statuses don't throw exceptions.
            </summary>
            <param name="minHttpStatus">min http status.</param>
            <param name="maxHttpStatus">max http status.</param>
            <returns>The current request.</returns>
        </member>
        <member name="M:Tiny.RestClient.IParameterRequest.AllowSpecificHttpStatusCode(System.Net.HttpStatusCode)">
            <summary>
            Allow a specific status code.
            </summary>
            <param name="statusCode">status code to be allowed.</param>
            <returns>The current request.</returns>
        </member>
        <member name="M:Tiny.RestClient.IParameterRequest.AllowSpecificHttpStatusCode(System.Int32)">
            <summary>
            Allow a specific status code.
            </summary>
            <param name="statusCode">status code to be allowed.</param>
            <returns>The current request.</returns>
        </member>
        <member name="M:Tiny.RestClient.IParameterRequest.WithBasicAuthentication(System.String,System.String)">
            <summary>
            Add a basic authentication credentials.
            </summary>
            <param name="username">the username.</param>
            <param name="password">the password.</param>
            <returns>The current request.</returns>
        </member>
        <member name="M:Tiny.RestClient.IParameterRequest.WithOAuthBearer(System.String)">
            <summary>
            Add a bearer token in the request headers.
            </summary>
            <param name="token">token value.</param>
            <returns>The current request.</returns>
        </member>
        <member name="M:Tiny.RestClient.IParameterRequest.WithTimeout(System.TimeSpan)">
            <summary>
            With timeout for current request.
            </summary>
            <param name="timeout">timeout.</param>
            <returns>The current request.</returns>
        </member>
        <member name="M:Tiny.RestClient.IParameterRequest.WithETagContainer(Tiny.RestClient.IETagContainer)">
            <summary>
            With a specific etag container.
            </summary>
            <param name="eTagContainer">the eTag container.</param>
            <returns></returns>
        </member>
        <member name="M:Tiny.RestClient.IParameterRequest.FillResponseHeaders(Tiny.RestClient.Headers@)">
            <summary>
            Fill header of response.
            </summary>
            <param name="headers">Header filled after execute method.</param>
            <returns>The current request.</returns>
        </member>
        <member name="M:Tiny.RestClient.IParameterRequest.AddHeader(System.String,System.String)">
            <summary>
            Adds the header.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns>The current request.</returns>
        </member>
        <member name="M:Tiny.RestClient.IParameterRequest.AddQueryParameter(System.String,System.String)">
            <summary>
            Adds the query parameter.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns>The current request.</returns>
        </member>
        <member name="M:Tiny.RestClient.IParameterRequest.AddQueryParameter(System.String,System.Boolean)">
            <summary>
            Adds the query parameter.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns>The current request.</returns>
        </member>
        <member name="M:Tiny.RestClient.IParameterRequest.AddQueryParameter(System.String,System.Nullable{System.Boolean})">
            <summary>
            Adds the query parameter.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns>The current request.</returns>
        </member>
        <member name="M:Tiny.RestClient.IParameterRequest.AddQueryParameter(System.String,System.Int32)">
            <summary>
            Adds the query parameter.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns>The current request.</returns>
        </member>
        <member name="M:Tiny.RestClient.IParameterRequest.AddQueryParameter(System.String,System.Nullable{System.Int32})">
            <summary>
            Adds the query parameter.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns>The current request.</returns>
        </member>
        <member name="M:Tiny.RestClient.IParameterRequest.AddQueryParameter(System.String,System.UInt32)">
            <summary>
            Adds the query parameter.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns>The current request.</returns>
        </member>
        <member name="M:Tiny.RestClient.IParameterRequest.AddQueryParameter(System.String,System.Nullable{System.UInt32})">
            <summary>
            Adds the query parameter.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns>The current request.</returns>
        </member>
        <member name="M:Tiny.RestClient.IParameterRequest.AddQueryParameter(System.String,System.Double)">
            <summary>
            Adds the query parameter.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns>The current request.</returns>
        </member>
        <member name="M:Tiny.RestClient.IParameterRequest.AddQueryParameter(System.String,System.Nullable{System.Double})">
            <summary>
            Adds the query parameter.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns>The current request.</returns>
        </member>
        <member name="M:Tiny.RestClient.IParameterRequest.AddQueryParameter(System.String,System.Decimal)">
            <summary>
            Adds the query parameter.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns>The current request.</returns>
        </member>
        <member name="M:Tiny.RestClient.IParameterRequest.AddQueryParameter(System.String,System.Nullable{System.Decimal})">
            <summary>
            Adds the query parameter.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns>The current request.</returns>
        </member>
        <member name="M:Tiny.RestClient.IParameterRequest.AddQueryParameter(System.String,System.Single)">
            <summary>
            Adds the query parameter.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns>The current request.</returns>
        </member>
        <member name="M:Tiny.RestClient.IParameterRequest.AddQueryParameter(System.String,System.Nullable{System.Single})">
            <summary>
            Adds the query parameter.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns>The current request.</returns>
        </member>
        <member name="M:Tiny.RestClient.IParameterRequest.AddQueryParameter(System.String,System.Nullable{System.Int64})">
            <summary>
            Adds the query parameter.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns>The current request.</returns>
        </member>
        <member name="M:Tiny.RestClient.IParameterRequest.AddQueryParameter(System.String,System.Int64)">
            <summary>
            Adds the query parameter.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns>The current request.</returns>
        </member>
        <member name="T:Tiny.RestClient.IRequest">
            <summary>
            Interface IRequest.
            </summary>
            <seealso cref="T:Tiny.RestClient.IFormRequest" />
            <seealso cref="T:Tiny.RestClient.IExecutableRequest" />
        </member>
        <member name="M:Tiny.RestClient.IRequest.AddContent``1(``0,Tiny.RestClient.IFormatter,Tiny.RestClient.ICompression)">
            <summary>
            Adds the content.
            </summary>
            <typeparam name="TContent">The type of the t content.</typeparam>
            <param name="content">The content.</param>
            <param name="serializer">Override the default serializer setted on the client.</param>
            <param name="compression">Add a compression system to compress your content.</param>
            <returns>The current request.</returns>
        </member>
        <member name="M:Tiny.RestClient.IRequest.AddByteArrayContent(System.Byte[],System.String)">
            <summary>
            Add byte array as content of request.
            </summary>
            <param name="byteArray">The byte array.</param>
            <param name="contentType">The Content type.</param>
            <returns>The current request.</returns>
        </member>
        <member name="M:Tiny.RestClient.IRequest.AddStreamContent(System.IO.Stream,System.String)">
            <summary>
            Adds stream as content.
            </summary>
            <param name="stream">The stream.</param>
            <param name="contentType">The content type.</param>
            <returns>The current request.</returns>
        </member>
        <member name="M:Tiny.RestClient.IRequest.AddStringContent(System.String,System.String)">
            <summary>
            Adds string as content (without apply any serialization).
            </summary>
            <param name="content">The content.</param>
            <param name="contentType">The content type.</param>
            <returns>The current request.</returns>
        </member>
        <member name="M:Tiny.RestClient.IRequest.AddFileContent(System.IO.FileInfo,System.String)">
            <summary>
            Adds file as content.
            </summary>
            <param name="file">The file to add as content of request.</param>
            <param name="contentType">The content type.</param>
            <returns>The current request.</returns>
        </member>
        <member name="M:Tiny.RestClient.IRequest.AsMultiPartFromDataRequest(System.String)">
            <summary>
            As a multipart data from request.
            </summary>
            <param name="contentType">content type of the request (default value  = "multipart/form-data").</param>
            <returns>The current request.</returns>
        </member>
        <member name="T:Tiny.RestClient.IMultiPartFromDataExecutableRequest">
            <summary>
            Interface IMultiPartFromDataRequest.
            </summary>
            <seealso cref="T:Tiny.RestClient.IMultipartFromDataRequest"/>
            <seealso cref="T:Tiny.RestClient.IExecutableRequest"/>
        </member>
        <member name="T:Tiny.RestClient.IMultipartFromDataRequest">
            <summary>
            Interface IMultiPartFromDataRequest.
            </summary>
        </member>
        <member name="M:Tiny.RestClient.IMultipartFromDataRequest.AddByteArray(System.Byte[],System.String,System.String,System.String)">
            <summary>
            Adds a byte array as content.
            </summary>
            <param name="data">The content.</param>
            <param name="name">The name of the item.</param>
            <param name="fileName">The name of the file.</param>
            <param name="contentType">The content type of the file.</param>
            <returns>The current request.</returns>
            <exception cref="T:System.ArgumentNullException">thrown when data is null.</exception>
        </member>
        <member name="M:Tiny.RestClient.IMultipartFromDataRequest.AddString(System.String,System.String,System.String,System.String)">
            <summary>
            Adds the content.
            </summary>
            <param name="data">The content.</param>
            <param name="name">The name of the item.</param>
            <param name="fileName">The name of the file.</param>
            <param name="contentType">The content type of the file.</param>
            <returns>The current request.</returns>
            <exception cref="T:System.ArgumentNullException">thrown when data is null.</exception>
        </member>
        <member name="M:Tiny.RestClient.IMultipartFromDataRequest.AddStream(System.IO.Stream,System.String,System.String,System.String)">
            <summary>
            Adds the content.
            </summary>
            <param name="data">The content.</param>
            <param name="name">The name of the item.</param>
            <param name="fileName">The name of the file.</param>
            <param name="contentType">The content type of the file.</param>
            <returns>The current request.</returns>
            <exception cref="T:System.ArgumentNullException">thrown when data is null.</exception>
        </member>
        <member name="M:Tiny.RestClient.IMultipartFromDataRequest.AddContent``1(``0,System.String,System.String,Tiny.RestClient.IFormatter,Tiny.RestClient.ICompression)">
            <summary>
            Adds the content.
            </summary>
            <typeparam name="TContent">The type of the t content.</typeparam>
            <param name="content">The content.</param>
            <param name="name">The name of the item.</param>
            <param name="fileName">The name of the file.</param>
            <param name="serializer">Override the default serializer setted on the client. If null use default serializer.</param>
            <param name="compression">Add compresion system use ton compress content.</param>
            <returns>The current request.</returns>
            <exception cref="T:System.ArgumentNullException">thrown when content is null.</exception>
        </member>
        <member name="M:Tiny.RestClient.IMultipartFromDataRequest.AddFileContent(System.IO.FileInfo,System.String,System.String,System.String)">
            <summary>
            Adds the content.
            </summary>
            <param name="content">The content.</param>
            <param name="name">The name of the item.</param>
            <param name="fileName">The name of the file.</param>
            <param name="contentType">The content type of the file.</param>
            <returns>The current request.</returns>
            <exception cref="T:System.ArgumentNullException">thrown when content is null.</exception>
        </member>
        <member name="M:Tiny.RestClient.IMultipartFromDataRequest.AddFileContent(System.IO.FileInfo,System.String)">
            <summary>
            Adds the content.
            </summary>
            <param name="content">The content.</param>
            <param name="contentType">The content type of the file.</param>
            <returns>The current request.</returns>
            <exception cref="T:System.ArgumentNullException">thrown when content is null.</exception>
        </member>
        <member name="T:Tiny.RestClient.Request">
            <summary>
            Class TinyRequest.
            </summary>
            <seealso cref="T:Tiny.RestClient.IRequest" />
        </member>
        <member name="M:Tiny.RestClient.Request.AddFormParameter(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Request.AddFormParameters(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Request.AddHeader(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Request.WithBasicAuthentication(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Request.WithOAuthBearer(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Request.AddQueryParameter(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Request.AddQueryParameter(System.String,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Request.AddQueryParameter(System.String,System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Request.AddQueryParameter(System.String,System.UInt32)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Request.AddQueryParameter(System.String,System.Nullable{System.UInt32})">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Request.AddQueryParameter(System.String,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Request.AddQueryParameter(System.String,System.Nullable{System.Double})">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Request.AddQueryParameter(System.String,System.Decimal)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Request.AddQueryParameter(System.String,System.Nullable{System.Decimal})">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Request.AddQueryParameter(System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Request.AddQueryParameter(System.String,System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Request.AddQueryParameter(System.String,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Request.AddQueryParameter(System.String,System.Nullable{System.Single})">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Request.AddQueryParameter(System.String,System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Request.AddQueryParameter(System.String,System.Nullable{System.Int64})">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Request.WithETagContainer(Tiny.RestClient.IETagContainer)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Request.WithTimeout(System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Request.ExecuteAsync``1(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Request.ExecuteAsync``1(Tiny.RestClient.IFormatter,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Request.ExecuteAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Request.ExecuteAsByteArrayAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Request.ExecuteAsStreamAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Request.ExecuteAsStringAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Request.ExecuteAsHttpResponseMessageAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Request.DownloadFileAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Request.AsMultiPartFromDataRequest(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Request.Tiny#RestClient#IMultipartFromDataRequest#AddByteArray(System.Byte[],System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Request.Tiny#RestClient#IMultipartFromDataRequest#AddString(System.String,System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Request.Tiny#RestClient#IMultipartFromDataRequest#AddStream(System.IO.Stream,System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Tiny.RestClient.Request.Tiny#RestClient#IMultipartFromDataRequest#AddContent``1(``0,System.String,System.String,Tiny.RestClient.IFormatter,Tiny.RestClient.ICompression)">
            <inheritdoc/>
        </member>
        <member name="T:Tiny.RestClient.RestClientSettings">
            <summary>
            All settings of <see cref="T:Tiny.RestClient.TinyRestClient"/>.
            </summary>
        </member>
        <member name="P:Tiny.RestClient.RestClientSettings.AddAcceptLanguageBasedOnCurrentCulture">
            <summary>
            Add to all request the AcceptLanguage based on CurrentCulture of the Thread.
            </summary>
        </member>
        <member name="P:Tiny.RestClient.RestClientSettings.ETagContainer">
            <summary>
            Get or set the ETagContainer.
            </summary>
        </member>
        <member name="P:Tiny.RestClient.RestClientSettings.DefaultTimeout">
            <summary>
            Get or set the default timeout of each request.
            </summary>
        </member>
        <member name="P:Tiny.RestClient.RestClientSettings.Encoding">
            <summary>
            Gets or set the encoding use by the client.
            </summary>
        </member>
        <member name="P:Tiny.RestClient.RestClientSettings.DefaultHeaders">
            <summary>
            Gets the default headers.
            </summary>
            <value>
            The default headers.
            </value>
        </member>
        <member name="P:Tiny.RestClient.RestClientSettings.CalculateHeadersHandler">
            <summary>
            Gets or set the handler used to calculate headers before send request.
            </summary>
        </member>
        <member name="P:Tiny.RestClient.RestClientSettings.Listeners">
            <summary>
            Log all requests.
            </summary>
        </member>
        <member name="P:Tiny.RestClient.RestClientSettings.Formatters">
            <summary>
            Gets the list of formatter used to serialize and deserialize data.
            </summary>
        </member>
        <member name="P:Tiny.RestClient.RestClientSettings.Compressions">
            <summary>
            Compression / decompression system enabled.
            </summary>
        </member>
        <member name="P:Tiny.RestClient.RestClientSettings.HttpStatusCodeAllowed">
            <summary>
            Range of status allowed if empty use default behavior.
            </summary>
        </member>
        <member name="P:Tiny.RestClient.RestClientSettings.EncapsulateHttpExceptionHandler">
            <summary>
            Gets or set the handler used when HttpException will be throw (can be used to transform exception).
            </summary>
        </member>
        <member name="T:Tiny.RestClient.TinyRestClient">
            <summary>
            Class <see cref="T:Tiny.RestClient.TinyRestClient"/>.
            </summary>
        </member>
        <member name="M:Tiny.RestClient.TinyRestClient.#ctor(System.Net.Http.HttpClient,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tiny.RestClient.TinyRestClient"/> class.
            </summary>
            <param name="httpClient">The httpclient used.</param>
            <param name="serverAddress">The server address.</param>
        </member>
        <member name="P:Tiny.RestClient.TinyRestClient.Settings">
            <summary>
            Settings of <see cref="T:Tiny.RestClient.TinyRestClient"/>.
            </summary>
        </member>
        <member name="M:Tiny.RestClient.TinyRestClient.NewRequest(System.Net.Http.HttpMethod,System.String)">
            <summary>
            Create a new request.
            </summary>
            <param name="httpMethod">The httpMethod.</param>
            <param name="route">The route.</param>
            <returns>The new request.</returns>
        </member>
        <member name="M:Tiny.RestClient.TinyRestClient.GetRequest(System.String)">
            <summary>
            Create a new GET request.
            </summary>
            <param name="route">The route.</param>
            <returns>The new request.</returns>
        </member>
        <member name="M:Tiny.RestClient.TinyRestClient.PostRequest(System.String)">
            <summary>
            Create a new POST request.
            </summary>
            <param name="route">The route.</param>
            <returns>The new request.</returns>
        </member>
        <member name="M:Tiny.RestClient.TinyRestClient.PostRequest``1(``0,Tiny.RestClient.IFormatter,Tiny.RestClient.ICompression)">
            <summary>
            Create a new POST request.
            </summary>
            <param name="content">The content of the request.</param>
            <param name="formatter">The formatter use to serialize the content.</param>
            <param name="compression">Add compresion system use to compress content.</param>
            <returns>The new request.</returns>
        </member>
        <member name="M:Tiny.RestClient.TinyRestClient.PostRequest``1(System.String,``0,Tiny.RestClient.IFormatter,Tiny.RestClient.ICompression)">
            <summary>
            Create a new POST request.
            </summary>
            <param name="route">The route.</param>
            <param name="content">The content of the request.</param>
            <param name="formatter">The formatter use to serialize the content.</param>
            <param name="compression">Add compresion system use to compress content.</param>
            <returns>The new request.</returns>
        </member>
        <member name="M:Tiny.RestClient.TinyRestClient.PutRequest(System.String)">
            <summary>
            Create a new PUT request.
            </summary>
            <param name="route">The route.</param>
            <returns>The new request.</returns>
        </member>
        <member name="M:Tiny.RestClient.TinyRestClient.PutRequest``1(``0,Tiny.RestClient.IFormatter,Tiny.RestClient.ICompression)">
            <summary>
            Create a new PUT request.
            </summary>
            <param name="content">The content of the request.</param>
            <param name="formatter">The formatter use to serialize the content.</param>
            <param name="compression">Add compresion system use to compress content.</param>
            <returns>The new request.</returns>
        </member>
        <member name="M:Tiny.RestClient.TinyRestClient.PutRequest``1(System.String,``0,Tiny.RestClient.IFormatter,Tiny.RestClient.ICompression)">
            <summary>
            Create a new PUT request.
            </summary>
            <param name="route">The route.</param>
            <param name="content">The content of the request.</param>
            <param name="formatter">The formatter use to serialize the content.</param>
            <param name="compression">Add compresion system use to compress content.</param>
            <returns>The new request.</returns>
        </member>
        <member name="M:Tiny.RestClient.TinyRestClient.PatchRequest(System.String)">
            <summary>
            Create a new PATCH request.
            </summary>
            <param name="route">The route.</param>
            <returns>The new request.</returns>
        </member>
        <member name="M:Tiny.RestClient.TinyRestClient.PatchRequest``1(``0,Tiny.RestClient.IFormatter,Tiny.RestClient.ICompression)">
            <summary>
            Create a new PATCH request.
            </summary>
            <param name="content">The content of the request.</param>
            <param name="serializer">The serializer use to serialize it.</param>
            <param name="compression">Add compresion system use to compress content.</param>
            <returns>The new request.</returns>
        </member>
        <member name="M:Tiny.RestClient.TinyRestClient.PatchRequest``1(System.String,``0,Tiny.RestClient.IFormatter,Tiny.RestClient.ICompression)">
            <summary>
            Create a new PATCH request.
            </summary>
            <param name="route">The route.</param>
            <param name="content">The content of the request.</param>
            <param name="serializer">The serializer use to serialize it.</param>
            <param name="compression">Add compresion system use ton compress content.</param>
            <returns>The new request.</returns>
        </member>
        <member name="M:Tiny.RestClient.TinyRestClient.DeleteRequest(System.String)">
            <summary>
            Create a new DELETE request.
            </summary>
            <param name="route">The route.</param>
            <returns>The new request.</returns>
        </member>
    </members>
</doc>
